os: Windows Server 2012 R2

platform:
  - x86
  - x64

configuration:
  - Release

install:
  - echo APPVEYOR_REPO_TAG_NAME %APPVEYOR_REPO_TAG_NAME%
  - ps: echo $env:platform
  - ps: if ($env:platform -eq 'x64') {$env:QTDIR = "C:\Qt\5.4\msvc2013_64_opengl"}
  - ps: if ($env:platform -eq 'x86') {$env:QTDIR = "C:\Qt\5.4\msvc2013_opengl"}
  - ps: echo $env:QTDIR
  - ps: Get-ChildItem C:\Qt\5.4
  - set PATH=%PATH%;%QTDIR%\bin
  
  - ps: cd "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC"
#  - ps: Get-ChildItem .
  - cmd: if "%PLATFORM%" == "x64" call vcvarsall.bat amd64
  - cmd: if "%PLATFORM%" == "x86" call vcvarsall.bat x86
#  - cmd: vcvarsall amd64
  - ps: cd "C:\projects\dfasma"

  - ps: New-Item -ItemType directory -Name lib | Out-Null
  - ps: cd lib

  - ps: echo "Install FFTW3"
  - ps: if ($env:platform -eq 'x64') {$libfftfile = "fftw-3.3.4-dll64"}
  - ps: if ($env:platform -eq 'x86') {$libfftfile = "fftw-3.3.4-dll32"}
  - ps: echo $libfftfile
  - ps: New-Item -ItemType directory -Name $libfftfile | Out-Null
  - ps: cd $libfftfile
#  - echo %CD%
  - ps: Invoke-WebRequest "ftp://ftp.fftw.org/pub/fftw/$libfftfile.zip" -OutFile "$libfftfile.zip"
  - ps: Get-ChildItem .
#  - appveyor DownloadFile "ftp://ftp.fftw.org/pub/fftw/$libfftfile.zip"
  - ps: 7z x "$libfftfile.zip" -y
  - ps: lib /machine:$env:platform /def:libfftw3-3.def
  - ps: Get-ChildItem .
  - ps: cd ..
  - ps: Move-Item "$libfftfile" libfftfile
#  - ps: Get-ChildItem C:\projects\dfasma\lib\fftw-3.3.4-dll32
#  - ps: lib /MACHINE:X86 /def:libfftw3-3.def # Needed only for MSVC (lib is still unrecognized command)

  - ps: echo "Install libsndfile"
#  - ps: New-Item -ItemType directory -Name libsndfile-1.0.25-w32
#  - ps: cd libsndfile-1.0.25-w32
#  - echo %CD%
# TODO Replace with original
#  - appveyor DownloadFile http://www.mega-nerd.com/libsndfile/files/libsndfile-1.0.25-w64-setup.exe
#  - libsndfile-1.0.25-w64-setup.exe /s
#  - ps: Get-ChildItem "C:\Program Files\Mega-Nerd\libsndfile"
  - ps: if ($env:platform -eq 'x64') {$libsndfile = "libsndfile-1.0.25-w64"}
  - ps: if ($env:platform -eq 'x86') {$libsndfile = "libsndfile-1.0.25-w32"}
  - ps: Invoke-WebRequest "http://gillesdegottex.eu/$libsndfile.zip" -OutFile "$libsndfile.zip"
  - ps: 7z x "$libsndfile.zip" -y
  - ps: Move-Item "$libsndfile" libsndfile
#  - ps: lib /MACHINE:X86 /def:libfftw3-3.def # Needed only for MSVC (lib is still unrecognized command)
#  - ps: Get-ChildItem "c:\projects\dfasma\lib\$libsndfile"

# Leave lib folder
  - ps: cd ..
  
# For packaging
# InnoSetup
#     Directly from author (working)
#  - appveyor DownloadFile http://www.jrsoftware.org/download.php/is.exe
#  - is.exe /SP- /VERYSILENT /NORESTART /SUPPRESSMSGBOXES
#     From Choco
  - choco install -y InnoSetup
#  - ps: Get-ChildItem "C:\Program Files (x86)\Inno Setup 5"

  - echo %CD%
  
  - git submodule update --init --recursive
#  - ps: cd ..

# Install SDIF
  - choco install cmake -version 3.0.2
  - choco install make
  - ps: cd external
  - ps: New-Item -ItemType directory -Name sdif | Out-Null
  - ps: cd sdif
  - ps: New-Item -ItemType directory -Name easdif | Out-Null
  - ps: Invoke-WebRequest "http://gillesdegottex.eu/EASDIF_SDIF.zip" -OutFile "EASDIF_SDIF.zip"
  - ps: 7z x "EASDIF_SDIF.zip" -y
  - ps: Get-ChildItem "c:\projects\dfasma\external\sdif\EASDIF_SDIF"
  - ps: New-Item -ItemType directory -Name build | Out-Null
  - ps: cd build
  - ps: cmake -DSDIF_BUILD_STATIC:BOOL=ON -DEASDIF_BUILD_STATIC:BOOL=ON -DCMAKE_INSTALL_PREFIX:STRING=c:/projects/dfasma/external/sdif/easdif ../EASDIF_SDIF
  - ps: Get-ChildItem .
  - ps: msbuild ALL_BUILD.vcxproj
  - ps: msbuild INSTALL.vcxproj
  - ps: Get-ChildItem "c:\projects\dfasma\external\sdif\easdif"

build_script:
# Compile
#  - qmake "CONFIG+=fft_fftw3 file_audio_libsndfile" "FILE_AUDIO_LIBDIR=C:\Program Files\Mega-Nerd\libsndfile" "FFT_LIBDIR=C:\projects\dfasma\lib\fftw-3.3.4-dll64" dfasma.pro
  - qmake "CONFIG+=fft_fftw3 file_audio_libsndfile" "FILE_AUDIO_LIBDIR=C:\projects\dfasma\lib\libsndfile" "FFT_LIBDIR=C:\projects\dfasma\lib\libfftfile" dfasma.pro
  - set PATH=%PATH%;C:\Qt\Tools\QtCreator\bin
  - C:\Qt\Tools\QtCreator\bin\jom.exe -f Makefile.Release

# Build package
  - ps: Get-ChildItem c:\projects\dfasma\lib
  - ps: Get-ChildItem c:\projects\dfasma\lib\libsndfile
  - ps: Get-ChildItem c:\projects\dfasma\lib\libfftfile
  - ps: if ($env:platform -eq 'x64') {& '.\distrib\package_appveyor_Win64bit.ps1'}
  - ps: if ($env:platform -eq 'x86') {& '.\distrib\package_appveyor_Win32bit.ps1'}
  - ps: Move-Item distrib/DFasma-*-Win*bit.exe .
  - ps: Get-ChildItem .
  #- ps: $GITPROJECTVERSION = (git describe --tags --always) | Out-String
  #- ps: $GITPROJECTVERSION = $GITPROJECTVERSION -replace "`n|`r"
  #- ps: echo "Version $GITPROJECTVERSION"
  - echo APPVEYOR_REPO_TAG_NAME %APPVEYOR_REPO_TAG_NAME%
  - if defined APPVEYOR_REPO_TAG_NAME set RELEASEVERSION=%APPVEYOR_REPO_TAG_NAME:~1%
  - echo Version %RELEASEVERSION%


artifacts:
  - path: DFasma-*-Win*bit.exe
    name: newinstallers   # Reference used for deployment


deploy:
- provider: GitHub
  release: Version $(releaseversion)
  tag: $(appveyor_repo_tag_name)
  auth_token:
    secure: TQgRc2OQ+3qGZXRW1yf2AIuYeOAC2FeC4wgfhZv2qZr8yMZF6AST9ER9xfRMJ4Ze # your encrypted token from GitHub
  artifact: newinstallers
  draft: true
  prerelease: false
  on:
    appveyor_repo_tag: true        # deploy on tag push only
    #branch: /v\d+\.\d+\.\d+/      # Doesn't work anymore

- provider: FTP
  protocol: ftp
  host: gillesdegottex.eu
  username:
    secure: hyevsAk3rL4taNeuyDilFw==
  password:
    secure: 9k6UaZicpsZM6atbF6rmjoLT7PcqQweV8jj1KyFYxIfqemPQTplIDlAMX3hr9LMoZyJ/f36PKV/b2ZDkMtFxqxiHCEIRfsvPEt1+YnrCORk=
  folder: /
  artifact: newinstallers
